% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hashtable.R
\name{HashtableInsertVector}
\alias{HashtableInsertVector}
\title{HashtableInsertVector: insert a vector element into the hashtable, each slot holds the inserted vector's row index in the matrix}
\usage{
HashtableInsertVector(vector, vector.index, hash.table)
}
\arguments{
\item{vector}{vector to insert}

\item{hash.table}{a hash table object created using package `hash`}
}
\value{
The function should change the hash table in the parameter and has no output
}
\description{
HashtableInsertVector: insert a vector element into the hashtable, each slot holds the inserted vector's row index in the matrix
}
\examples{
# create sample data
x <- matrix(
    c(1,2,5,1,3,1,
      1,5,3,2,4,5,
      3,4,2,1,1,0),nrow=3,byrow=TRUE)
rownames(x)<- as.character(1:3)

# create an empty hashtable
h<-hash()

# insert the first row into hashtable
rowidx<-1
h<-HashtableInsertVector(vector=x[rowidx, ], vector.index=rowidx, hash.table=h)
h
# this should return
# <hash> containing 1 key-value pair(s).
#  125131 : 1

rowidx<-1
h<-HashtableInsertVector(vector=x[rowidx, ], vector.index=rowidx, hash.table=h)
h
# this should return
# <hash> containing 1 key-value pair(s).
#  125131 : 1 1

rowidx<-3
h<-HashtableInsertVector(vector=x[rowidx, ], vector.index=rowidx, hash.table=h)
h
# this should return
# <hash> containing 1 key-value pair(s).
#  125131 : 1 1
#  342110 : 3
}
